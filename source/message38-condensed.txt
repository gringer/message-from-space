Is a function that takes an "interaction-protocol", some data (maybe "protocol" dependent), and some pixel. 
It returns some new data, and a list of pictures.

Note that during the execution it sometimes uses the :doc:`send <message15>` function to communicate with spacecraft.

::

    // list function call notation
    f38 protocol (flag, newState, data) = if flag == 0
                    then (modem newState, multipledraw data)
                    else interact protocol (modem newState) (send data)
    interact protocol state vector = f38 protocol (protocol state vector)



    // mathematical function call notation
    f38(protocol, (flag, newState, data)) = if flag == 0
                    then (modem(newState), multipledraw(data))
                    else interact(protocol, modem(newState), send(data))
    interact(protocol, state, vector) = f38(protocol, protocol(state, vector))


``mod`` is defined on ``cons``, ``nil`` and ``numbers`` only. So ``modem`` function seems to be the way to say that it's argument consists of numbers and lists only.

So we can assume that ``newState`` is always list of list of ... of numbers.

After experimenting with galaxy interaction protocol we have found out several things:

1. We can choose any ``vector`` to pass it to the interact function.

2. The good way to input this vectors - is clicking on the image pixel from the previous interact run.

3. We need to draw the images passed to multipledraw somehow. A good way to do it - is to overlay images one over another with different colors.
